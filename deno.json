{
  "workspace": [
    "ansi",
    "command",
    "flags",
    "internal",
    "keycode",
    "keypress",
    "prompt",
    "table",
    "testing"
  ],
  "lock": false,
  "exclude": ["dist"],
  "tasks": {
    "lint": "deno lint && deno fmt --check",
    "fmt": "deno fmt",
    "node": "pnpm tsx",
    "bun": "bun run",
    "test": "deno task test:deno",
    "test:all": "deno task clean && deno task test:deno && deno task setup:node && deno task test:node && deno task clean",
    "test:deno": "deno task test:deno-v2",
    "test:deno-v1": "deno task test:deno-v2 --doc --ignore=./CHANGELOG.md",
    "test:deno-v2": "deno test --allow-run=deno --allow-env --allow-read  --allow-write=./ --parallel",
    "test:node": "pnpm tsx --test '!(testing|node_modules)/**/*test.ts'",
    "test:bun": "bun test",
    "coverage:deno": "deno task coverage:deno-v2",
    "coverage:deno-v1": "deno task test:deno-v1 --coverage=./dist/coverage/deno/result $COVERAGE_FILES && deno coverage --lcov ./dist/coverage/deno/result > ./dist/coverage/deno/cov.lcov",
    "coverage:deno-v2": "deno task test:deno-v2 --coverage=./dist/coverage/deno/result $COVERAGE_FILES && deno coverage --lcov ./dist/coverage/deno/result > ./dist/coverage/deno/cov.lcov",
    "coverage:node": "mkdir -p dist/coverage/node && pnpm tsx --test --experimental-test-coverage --test-reporter=spec --test-reporter=lcov --test-reporter-destination=stdout --test-reporter-destination=./dist/coverage/node/cov.lcov '!(testing|node_modules)/**/*test.ts'",
    "coverage:bun": "deno task test:bun --coverage --coverage-reporter=lcov --coverage-dir=./dist/coverage",
    "snapshot": "deno task test -- --update",
    "check": "deno task check:deno-v2",
    "check:deno-v1": "deno check .",
    "check:deno-v2": "deno check --doc .",
    "setup:deno": "echo nothing todo",
    "setup:node": "deno run -A ./tasks/setup_node.ts",
    "setup:bun": "deno run -A ./tasks/setup_node.ts --bun",
    "clean": "rm -rf dist node_modules .npmrc bun.lockb package.json pnpm-lock.yaml tsconfig.json",
    "update": "deno run --allow-read=./ --allow-net --allow-write=./ https://deno.land/x/deno_outdated@0.2.5/cli.ts --ignore README.md CHANGELOG.md CONTRIBUTING.md"
  },
  "imports": {
    "@c4spar/mock-command": "jsr:@c4spar/mock-command@^1.0.1",
    "@c4spar/mock-fetch": "jsr:@c4spar/mock-fetch@^1.0.0",
    "@cliffy/ansi": "jsr:@cliffy/ansi@1.0.0-rc.8",
    "@cliffy/command": "jsr:@cliffy/command@1.0.0-rc.8",
    "@cliffy/flags": "jsr:@cliffy/flags@1.0.0-rc.8",
    "@cliffy/internal": "jsr:@cliffy/internal@1.0.0-rc.8",
    "@cliffy/keycode": "jsr:@cliffy/keycode@1.0.0-rc.8",
    "@cliffy/keypress": "jsr:@cliffy/keypress@1.0.0-rc.8",
    "@cliffy/prompt": "jsr:@cliffy/prompt@1.0.0-rc.8",
    "@cliffy/table": "jsr:@cliffy/table@1.0.0-rc.8",
    "@cliffy/testing": "jsr:@cliffy/testing@1.0.0-rc.8",
    "@std/assert": "jsr:@std/assert@~1.0.6",
    "@std/async": "jsr:@std/async@~1.0.5",
    "@std/cli": "jsr:@std/cli@~1.0.6",
    "@std/datetime": "jsr:@std/datetime@~0.225.2",
    "@std/encoding": "jsr:@std/encoding@~1.0.5",
    "@std/fmt": "jsr:@std/fmt@~1.0.2",
    "@std/fs": "jsr:@std/fs@~1.0.4",
    "@std/http": "jsr:@std/http@~1.0.7",
    "@std/io": "jsr:@std/io@~0.224.9",
    "@std/path": "jsr:@std/path@~1.0.6",
    "@std/testing": "jsr:@std/testing@1.0.0",
    "@std/text": "jsr:@std/text@~1.0.7",
    "sinon": "npm:sinon@13.0.2"
  }
}
